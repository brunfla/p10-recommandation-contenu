stages:
  train_model:
    cmd: >
      papermill notebooks/training.ipynb _
      -p metadata_path ${model.metadata_path} 
      -p clicks_path ${model.clicks_path}
      -p embeddings_path ${model.embeddings_path}
      -p content_based_model_path ${model.content_based_model_path}
      -p collaborative_model_path ${model.collaborative_model_path}
    deps:
      - notebooks/training.ipynb
      - data/deps/clicks_sample.csv
      - data/deps/articles_metadata.csv
      - data/deps/articles_embeddings.pickle
    outs:
      - data/outs/model/content_based_model.pkl
      - data/outs/model/collaborative_filtering_svd.pkl

  upload_content_based_model:
    cmd: ./scripts/upload_model.sh content_based_model.pkl
    deps:
      - data/outs/model/content_based_model.pkl
      - scripts/upload_model.sh

  upload_collaborative_filtering_model:
    cmd: ./scripts/upload_model.sh collaborative_filtering_svd.pkl
    deps:
      - data/outs/model/collaborative_filtering_svd.pkl
      - scripts/upload_model.sh

  build:
    cmd: if [ "$GH_CI" = "true" ]; then echo "[CI] Skip build docker"; else docker-compose build; fi
    deps:
      - docker-compose.yml
      - azure_function/Dockerfile
      - streamlit_app/Dockerfile 
    always_changed: true

  deploy:
    cmd: if [ "$GH_CI" = "true" ]; then cd azure_function && func azure functionapp publish p10 --python; else docker-compose up -d --force-recreate; fi
    always_changed: true

  test:
    cmd: ./scripts/test.sh
    deps:
      - scripts/test.sh 
    always_changed: true
