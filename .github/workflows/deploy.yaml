name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  GH_CI: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 📦 Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: 🛠 Install AzCopy
        run: |
          wget https://aka.ms/downloadazcopy-v10-linux -O azcopy.tar.gz
          tar -xf azcopy.tar.gz
          sudo cp ./azcopy_linux_amd64_*/azcopy /usr/bin/

      - name: 📦 Install Azure Functions Core Tools
        run: |
          npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ⚙️ Configure DVC remote credentials
        run: |
          dvc remote modify azure-p10 account_name $DVC_ACCOUNT_NAME --local
          dvc remote modify azure-p10 account_key $DVC_ACCOUNT_KEY --local
          dvc remote list
        env:
          DVC_ACCOUNT_NAME: ${{ secrets.DVC_ACCOUNT_NAME }}
          DVC_ACCOUNT_KEY: ${{ secrets.DVC_ACCOUNT_KEY }}

      - name: 🔄 Smart DVC Pull with simple check
        shell: bash
        run: |
          file_not_cache=0

          for o in $(yq '.stages.*.outs[]' dvc.yaml | tr -d '"'); do
            echo "🔎 Checking: $o"
            if [ ! -f "$o" ]; then
              echo "⚠️ Missing: $o"
              file_not_cache=1
            fi
          done

          if [ "$file_not_cache" -eq 1 ]; then
            echo "➡️ Some outs missing, pulling only data/deps/"
            dvc pull -R data/deps
          else
            echo "✅ All outs present, doing full pull"
            dvc pull
          fi

      - name: 🔁 DVC repro
        run: dvc repro
        env:
          MODEL_SAS_URL: ${{ secrets.MODEL_SAS_URL }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_FUNCTION_NAME: ${{ secrets.AZURE_FUNCTION_NAME }}

      - name: ☁️ DVC push + commit metadata if files were uploaded
        shell: bash
        run: |
          echo "☁️ Running dvc push..."
          output=$(dvc push)

          echo "$output"

          if echo "$output" | grep -q -e "file pushed"; then
            echo "📦 DVC uploaded files. Committing updated metadata..."
            git config --global user.email "bruno.flament.bf@gmail.com"
            git config --global user.name "Bruno Flament"
            git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/brunfla/p10-recommandation-contenu.git
            git add dvc.lock dvc.yaml .dvc
            git commit -m "🔄 Update DVC metadata [CI]"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "✅ No data was pushed. Skipping Git commit."
          fi

#      - name: 🔐 Hash secrets
#        run: |
#          echo -n "$MODEL_SAS_URL" | sha256sum | cut -d ' ' -f1 > data/deps/github/MODEL_SAS_URL.hash
#          echo -n "$AZURE_RESOURCE_GROUP" | sha256sum | cut -d ' ' -f1 > data/deps/github/AZURE_RESOURCE_GROUP.hash
#          echo -n "$AZURE_FUNCTION_NAME" | sha256sum | cut -d ' ' -f1 > data/deps/github/AZURE_FUNCTION_NAME.hash
#        env:
#          MODEL_SAS_URL: ${{ secrets.MODEL_SAS_URL }}
#          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
#          AZURE_FUNCTION_NAME: ${{ secrets.AZURE_FUNCTION_NAME }}

